{
  "name": "docsy-user-guide",
  "scripts": {
    "__install:prettier": "npm install prettier@$(npm pkg get devDependencies.prettier | tr -d '^\"') --no-save",
    "_build": "npm run _hugo-dev --",
    "_check:format": "npx prettier --check .",
    "_check:links": "make check-links",
    "_check:links--warn": "npm run _check:links || (echo; echo 'WARNING: see link-checker output for issues.'; echo)",
    "_commit:public": "HASH=$(git rev-parse --short main); cd public && git add -A && git commit -m \"Site at $HASH\"",
    "_filename-error": "echo 'ERROR: the following files violate naming conventions; fix using: `npm run fix:filenames`'; echo; npm run -s _ls-bad-filenames; exit 1",
    "_filenames-to-kebab-case": "find assets content -name '*_*' ! -name '[_.]*' -exec sh -c 'mv \"$1\" \"${1//_/-}\"' _ {} \\;",
    "_get:submodule": "set -x && git submodule update --init ${DEPTH:- --depth 1}",
    "_hugo-dev": "npm run _hugo -- -e dev -DFE",
    "_hugo": "hugo --cleanDestinationDir",
    "_ls-bad-filenames": "find assets content -name '*_*' ! -name '[_.]*'",
    "_prepare:docsy": "cd themes/docsy && npm install",
    "_serve": "npm run _hugo-dev -- serve --minify --disableFastRender --renderToMemory",
    "build:preview": "npm run _hugo-dev -- --minify --baseURL \"${DEPLOY_PRIME_URL:-http://localhost}\"",
    "build:production": "npm run _hugo -- --minify",
    "build": "npm run _build --",
    "check:filenames": "test -z \"$(npm run -s _ls-bad-filenames)\" || npm run -s _filename-error",
    "check:format": "npm run _check:format || (echo '[help] Run: npm run fix:format'; exit 1)",
    "check:links:all": "HTMLTEST_ARGS= npm run _check:links",
    "check:links": "npm run _check:links",
    "clean": "rm -Rf public",
    "fix:filenames": "npm run _filenames-to-kebab-case",
    "fix:format": "npm run _check:format -- --write",
    "fix": "npm run fix:filenames && npm run fix:format",
    "get:submodule": "npm run _get:${GET:-submodule}",
    "make:public": "git init -b main public",
    "postbuild:preview": "npm run _check:links--warn",
    "postbuild:production": "npm run _check:links--warn",
    "precheck:links:all": "npm run build",
    "precheck:links": "npm run build",
    "prepare": "npm run seq -- get:submodule _prepare:docsy",
    "seq": "bash -c 'for cmd in \"$@\"; do npm run $cmd || exit 1; done' - ",
    "serve": "npm run _serve",
    "test:only": "npm run seq -- check:filenames check:format check:links",
    "test": "echo 'RUNNING FIX AND TESTS...'; npm run fix && npm run test:only",
    "update:packages": "npx npm-check-updates -u"
  },
  "devDependencies": {
    "autoprefixer": "^10.4.21",
    "cspell": "^9.2.2",
    "hugo-extended": "0.151.2",
    "postcss-cli": "^11.0.1",
    "prettier": "^3.6.2"
  },
  "optionalDependencies": {
    "netlify-cli": "^23.9.5",
    "npm-check-updates": "^19.1.1"
  },
  "enginesComment": "Ensure that engines.node value stays consistent with the project's .nvmrc",
  "engines": {
    "node": "22.x"
  },
  "gitHubActionCacheKey": "2025-10-19-v1",
  "private": true,
  "prettier": {
    "proseWrap": "always",
    "singleQuote": true
  },
  "spelling": "cSpell:ignore docsy hugo htmltest netlify precheck postbuild -"
}
